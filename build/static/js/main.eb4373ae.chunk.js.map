{"version":3,"sources":["components/NewsData.js","components/News.js","components/Coin.js","components/Home.js","components/Navbar.js","coinGecko.js","components/ChartConfig.js","components/ChartsDetails.js","components/CoinDetails.js","components/ShowCoin.js","components/ExchangeData.js","components/Exchange.js","components/Calculator.js","components/EventsData.js","components/Events.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","NewsData","news","i","date","moment","format","classes","Grid","Card","className","CardHeader","Avatar","aria-label","title","subheader","CardMedia","image","imageurl","source","CardContent","Typography","variant","color","component","body","substring","categories","href","url","cc","require","setApiKey","News","useState","newsData","setNewsData","loading","setLoading","useEffect","setInterval","newsList","then","console","log","catch","error","class","role","container","spacing","style","gap","justifyContent","map","Coin","name","symbol","price","volume","priceChange","id","rank","toUpperCase","toLocaleString","toFixed","to","Home","coinData","setCoinData","search","setSearch","getData","a","axios","get","res","data","alert","handleChange","e","target","value","filteredCoins","filter","coin","toLowerCase","includes","type","required","placeholder","onChange","key","total_volume","current_price","price_change_percentage_24h","marketcap","market_cap","market_cap_rank","Navbar","click","setClick","closeMobileMenu","Provider","onClick","baseURL","historyOptions","lineHeightAnnotation","always","hover","lineWeight","animation","maintainAspectRatio","responsive","scales","xAxes","distribution","ChartsDetails","chartRef","useRef","day","week","year","detail","timeFormat","setTimeFormat","determineTimeFormat","current","Chartjs","datasets","label","borderColor","pointRadius","options","price_change_24h","renderPrice","ref","width","CoinDetails","total_supply","high_24h","circulating_supply","low_24h","renderData","ShowCoin","useParams","isLoading","setIsLoading","formatData","el","t","y","Promise","all","coinGecko","params","vs_currency","days","ids","prices","fetchData","ExchangeData","trust_score_rank","country","year_established","trade_volume_24h_btc","trade_volume_24h_btc_normalized","Exchange","list","setList","Calculator","amount","from","results","values","setValues","event","clickSubmit","preventDefault","convert","onSubmit","ether","wei","finney","gether","gwei","kether","kwei","mether","mwei","szabo","tether","EventsData","events","screenshot","description","organizer","start_date","end_date","city","venue","website","Events","eventsData","setEventsData","eventList","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb4373ae.chunk.js","sourcesContent":["import React from 'react'\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }));\r\n\r\nconst NewsData = ({ news,i }) => {\r\n    const date = moment().format('MMMM Do YYYY, h:mm:ss a');\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n        <Grid>\r\n          <Card className={classes.root}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"\" className={classes.avatar}>\r\n                 {i}\r\n              </Avatar>\r\n            }\r\n            title={news.title}\r\n            subheader={date}\r\n          />\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={news.imageurl}\r\n            title={news.source}\r\n          />\r\n          <CardContent>\r\n            <Typography className=\"black-5\"  variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n             Description: {news.body ? news.body.substring(0, 200): \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"black-6\"  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Category: {news.categories}\r\n            </Typography>\r\n            </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"text-center\">\r\n                <a href={news.url} className=\"btn btn-primary\">View News</a>\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default NewsData\r\n","import React, { useEffect, useState } from 'react'\r\nimport {Grid} from '@material-ui/core'\r\nimport NewsData from './NewsData';\r\nconst cc = require(\"cryptocompare\")\r\ncc.setApiKey(\"b1ea693d79e6f8b6d914d2a8a4afd0916244510823d8628147e8b74fd068b1e7\")\r\n\r\nconst News = () => {\r\n\r\n    const [newsData, setNewsData] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const getNews = () => {\r\n        setLoading(true)\r\n        cc.newsList('EN')\r\n        .then(newsList => {\r\n            console.log(newsList)\r\n            setNewsData(newsList)\r\n            setLoading(false)\r\n        })\r\n        .catch(console.error)\r\n    }\r\n\r\n    useEffect(() => {\r\n       setInterval(getNews(),3000)\r\n    }, [])\r\n\r\n    const isLoading = () => {\r\n        return (\r\n            <div class=\"spinner\">\r\n                <div class=\"d-flex justify-content-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                  </div>\r\n                </div> \r\n            </div>        \r\n        )\r\n     }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"mt-4 text-center\">Top 50 Latest News</h1>\r\n            <hr/>\r\n            {loading ? isLoading() : \r\n           <Grid container spacing={2} style={{gap: '20px', justifyContent: 'center'}} >\r\n                {newsData.map((news, i) => {\r\n                    return <NewsData news={news} i={i} />\r\n                })}\r\n            </Grid>\r\n            }\r\n            </div>\r\n   )\r\n}\r\n\r\nexport default News;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Coin.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport {Grid} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.5%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }));\r\n\r\nconst Coin = ({ image, name, symbol, price, volume, priceChange, id, rank }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n          <Grid>\r\n          <Card className={classes.root}>\r\n           <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"\" className={classes.avatar}>\r\n                 {rank}\r\n              </Avatar>\r\n            }\r\n            title={name}\r\n            \r\n          />\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={image}\r\n          />\r\n          <CardContent>\r\n            <Typography className=\"black-5\"  variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n             Symbol: {symbol ? symbol.toUpperCase() : \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"black-6\"  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Price: {price? price : \"Not Available\"}\r\n            </Typography>\r\n            </CardContent>\r\n            <CardContent>\r\n            <Typography className=\"black-7\"  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Volume: ₹ {volume? volume.toLocaleString() : \"Not Available\"}\r\n            </Typography>\r\n            </CardContent>\r\n            <CardContent>\r\n            <Typography className=\"black-8\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Price Change: {priceChange < 0 ? (\r\n                        <p className=\"coin-percent red\"> {priceChange.toFixed(2)}%</p>\r\n                    ) : (<p className=\"coin-percent green\">+ {priceChange.toFixed(2)}%</p>)}\r\n            </Typography>\r\n            </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"text-center\">\r\n             <Link className=\"btn btn-outline-primary\" to={`/coindata/${id}`}>View Data</Link>\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Coin","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Coin from './Coin';\r\nimport {Grid} from '@material-ui/core'\r\n\r\nconst Home = () => {\r\n\r\n    const [coinData, setCoinData] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n    const [search, setSearch] = useState('')\r\n\r\n    const getData = async() => {\r\n        const url = \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=50&page=1&sparkline=true\"\r\n        setLoading(true)\r\n        await axios.get(url)\r\n        .then(res => {\r\n        console.log(res.data)\r\n        setCoinData(res.data)\r\n        setLoading(false)\r\n        })\r\n        .catch(error => alert(error, 'Failed to load the data!!'))\r\n    }\r\n\r\n    useEffect(() => {\r\n       setInterval(getData() ,3000)\r\n    }, [])\r\n\r\n    const isLoading = () => {\r\n            return (\r\n                <div class=\"spinner\">\r\n                    <div class=\"d-flex justify-content-center\">\r\n                      <div class=\"spinner-border\" role=\"status\">\r\n                      </div>\r\n                    </div> \r\n                </div>        \r\n            )\r\n    }\r\n\r\n    const handleChange = e => {\r\n       setSearch(e.target.value)\r\n    }\r\n\r\n    const filteredCoins = coinData.filter(coin =>\r\n       coin.name.toLowerCase().includes(search.toLowerCase()) \r\n    )\r\n\r\n    const showData = () => {\r\n        return (\r\n            <div className=\"coin-app container\">\r\n                <div className=\"coin-search\">\r\n                    <h1 className=\"coin-text\">Top 50 Cryptocurrencies</h1>\r\n                   <div className=\"container\">\r\n                   <form>\r\n                        <input\r\n                            type=\"text\"\r\n                            required\r\n                            placeholder=\"Search Top 50 Crypto By Their Name...\"\r\n                            className=\"coin-input text-center\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </form>\r\n                   </div>\r\n                </div>\r\n                <Grid container spacing={2} style={{gap: '20px', justifyContent: 'center'}} >\r\n                {filteredCoins.map(coin => (\r\n                   <Coin\r\n                    key={coin.id}\r\n                    id={coin.id}\r\n                    name={coin.name}\r\n                    image={coin.image}\r\n                    symbol={coin.symbol}\r\n                    volume={coin.total_volume}\r\n                    price={coin.current_price}\r\n                    priceChange={coin.price_change_percentage_24h}\r\n                    marketcap={coin.market_cap}\r\n                    rank={coin.market_cap_rank}\r\n                />\r\n                ))}\r\n                 </Grid>  \r\n                </div>\r\n        )\r\n    }\r\n\r\n   return (\r\n       <div className=\"coin-container\">\r\n        {loading ? isLoading() : showData()}\r\n        </div>     \r\n   )\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport { FaTimes ,FaAlignRight} from 'react-icons/fa';\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <nav className='navbar'>\r\n          <div className='navbar-container container'>\r\n            <Link to='/' className='navbar-logo mt-2'onClick={closeMobileMenu}>\r\n             CryptoDashboard\r\n            </Link>\r\n            <div className='menu-icon' onClick={handleClick}>\r\n              {click ? <FaTimes /> : <FaAlignRight className=\"bg-primary\" />}\r\n            </div>\r\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n              <li className='nav-item'>\r\n                <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link\r\n                  to='/news'\r\n                  className='nav-links'\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  News\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link\r\n                  to='/exchanges'\r\n                  className='nav-links'\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  Exchanges\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link\r\n                  to='/calculator'\r\n                  className='nav-links'\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  Calculator\r\n                </Link>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <Link\r\n                  to='/events'\r\n                  className='nav-links'\r\n                  onClick={closeMobileMenu}\r\n                >\r\n                  Events\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.coingecko.com/api/v3\",\r\n});","export const historyOptions = {\r\n  lineHeightAnnotation: {\r\n    always: true,\r\n    hover: false,\r\n    lineWeight: 1.5,\r\n  },\r\n\r\n  animation: {\r\n    duration: 1000,\r\n  },\r\n  maintainAspectRatio: false,\r\n  responsive: true,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        distribution: \"line\",\r\n      },\r\n    ],\r\n  },\r\n};","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Chartjs from \"chart.js\";\r\nimport { historyOptions } from \"./ChartConfig\";\r\n\r\n\r\nconst ChartsDetails = ({ data }) => {\r\n    \r\n    const chartRef = useRef();\r\n    const { day, week, year, detail } = data;\r\n    const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n   \r\n    const determineTimeFormat = () => {\r\n        switch (timeFormat) {\r\n          case \"24h\":\r\n            return day;\r\n          case \"7d\":\r\n            return week;\r\n          case \"1y\":\r\n            return year;\r\n          default:\r\n            return day;\r\n        }\r\n  };\r\n\r\n    \r\n  useEffect(() => {\r\n        if (chartRef && chartRef.current && detail) {\r\n          console.log(\"yeah\");\r\n          const chartInstance = new Chartjs(chartRef.current, {\r\n            type: \"line\",\r\n            data: {\r\n              datasets: [\r\n                {\r\n                  label: `${detail.name} price`,\r\n                  data: determineTimeFormat(),\r\n                  backgroundColor: \"rgb(0,0,128)\",\r\n                  borderColor: \"rgba(174, 305, 194, 0.4\",\r\n                  pointRadius: 0,\r\n                },\r\n              ],\r\n            },\r\n            options: {\r\n              ...historyOptions,\r\n            },\r\n          });\r\n       }\r\n      });\r\n    \r\n  const renderPrice = () => {\r\n    if (detail) {\r\n      return (\r\n        <>\r\n          <p className=\"my-0\">INR {detail.current_price ? detail.current_price.toLocaleString() : \"Not Available\"}</p>\r\n          <p\r\n            className={\r\n              detail.price_change_24h < 0\r\n                ? \"text-danger my-0\"\r\n                : \"text-success my-0\"\r\n            }\r\n          >\r\n            {detail.price_change_percentage_24h ? detail.price_change_percentage_24h.toFixed(2) : \"Not Available\"}%\r\n          </p>\r\n        </>\r\n      );\r\n    } \r\n  };\r\n\r\n      return (\r\n        <div className=\"border mt-2 rounded p-3\">\r\n          <div>{renderPrice()}</div>\r\n          <div class=\"chart-container\">\r\n            <canvas ref={chartRef} id=\"myChart\" width={300} height={300}></canvas>\r\n          </div>\r\n\r\n    \r\n          <div className=\"chart-button mt-1\">\r\n            <button\r\n              onClick={() => setTimeFormat(\"24h\")}\r\n              className=\"btn btn-success \"\r\n            >\r\n              24h\r\n            </button>\r\n            <button\r\n              onClick={() => setTimeFormat(\"7d\")}\r\n              className=\"btn btn-success mx-1\"\r\n            >\r\n              7d\r\n            </button>\r\n            <button\r\n              onClick={() => setTimeFormat(\"1y\")}\r\n              className=\"btn btn-success\"\r\n            >\r\n              1y\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ChartsDetails\r\n","import React from \"react\";\r\n\r\nconst CoinDetails = ({ data }) => {\r\n  \r\n  const renderData = () => {\r\n    if (data) {\r\n      return (\r\n        <div className=\"mt-4 p-2 rounded border row\">\r\n          <div className=\"col-sm\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">Market Cap</span>\r\n              <span> ₹ {data.market_cap? data.market_cap.toLocaleString():\"Not Available\"}</span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">\r\n                Total Supply\r\n              </span>\r\n              <span> ₹ {data.total_supply? data.total_supply.toLocaleString() : \"Not Available\"}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-sm\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">Volume(24H)</span>\r\n              <span> ₹ {data.total_volume? data.total_volume.toLocaleString(): \"Not Available\"}</span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">high 24h</span>\r\n              <span> ₹ {data.high_24h? data.high_24h.toLocaleString() : \"Not Available\"}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-sm\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">\r\n                Circulating Supply\r\n              </span>\r\n              <span> ₹ {data.circulating_supply? data.circulating_supply.toLocaleString(): \"Not Available\"}</span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"text-muted coin-data-category\">low 24h</span>\r\n              <span> ₹ {data.low_24h? data.low_24h.toLocaleString(): \"Not Available\"}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{renderData()}</div>;\r\n};\r\n\r\nexport default CoinDetails;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport coinGecko from \"../coinGecko\";\r\nimport ChartsDetails from \"./ChartsDetails\";\r\nimport CoinDetails from \"./CoinDetails\";\r\n\r\n\r\nconst ShowCoin = () => {\r\n\r\n  const { id } = useParams();\r\n  const [coinData, setCoinData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const formatData = (data) => {\r\n    return data.map((el) => {\r\n      return {\r\n        t: el[0],\r\n        y: el[1].toFixed(2),\r\n      };\r\n    });\r\n  };\r\n\r\n   useEffect(() => {\r\n    console.log(id)\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const [day, week, year, detail] = await Promise.all([\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: \"inr\",\r\n            days: \"1\",\r\n          },\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: \"inr\",\r\n            days: \"7\",\r\n          },\r\n        }),\r\n        coinGecko.get(`/coins/${id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: \"inr\",\r\n            days: \"365\",\r\n          },\r\n        }),\r\n        coinGecko.get(\"/coins/markets/\", {\r\n          params: {\r\n            vs_currency: \"inr\",\r\n            ids: id,\r\n          },\r\n        }),\r\n      ]);\r\n      console.log(day);\r\n\r\n      setCoinData({\r\n        day: formatData(day.data.prices),\r\n        week: formatData(week.data.prices),\r\n        year: formatData(year.data.prices),\r\n        detail: detail.data[0],\r\n      });\r\n      setIsLoading(false);\r\n    };\r\n\r\n     fetchData();\r\n  }, []);\r\n\r\n  const renderData = () => {\r\n    if (isLoading) {\r\n        return (\r\n            <div class=\"spinner\">\r\n                <div class=\"d-flex justify-content-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                   </div>\r\n            </div> \r\n            </div>        \r\n        )\r\n    }\r\n      \r\n\r\n    return (\r\n     \r\n      <div className=\"container\">\r\n        <br />\r\n        <br/>\r\n        <ChartsDetails data={coinData} />\r\n        <br />\r\n        <hr/>\r\n        <CoinDetails data={coinData.detail} />\r\n        <br/>\r\n      </div>\r\n      \r\n    );\r\n  };\r\n\r\n  return renderData();\r\n};\r\n\r\nexport default ShowCoin;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.5%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }));\r\n\r\n\r\nconst ExchangeData = ({ data }) => {\r\n    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n           <Grid>\r\n           <Card className={classes.root}>\r\n           <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"\" className={classes.avatar}>\r\n                 {data.trust_score_rank}\r\n              </Avatar>\r\n            }\r\n            title={data.name}\r\n            \r\n          />\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={data.image}\r\n          />\r\n          <CardContent>\r\n            <Typography className=\"black-5\" variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n             Country: {data.country ? data.country : \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"black-6\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Established In: {data.year_established? data.year_established : \"Not Available\"}\r\n            </Typography>\r\n            </CardContent>\r\n            <CardContent>\r\n            <Typography className=\"black-7\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Trade Volume: ₹ {data.trade_volume_24h_btc? data.trade_volume_24h_btc.toLocaleString() : \"Not Available\"}\r\n            </Typography>\r\n            </CardContent>\r\n            <CardContent>\r\n            <Typography className=\"black-8\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Normalized Trade Volume: ₹ {data.trade_volume_24h_btc_normalized? data.trade_volume_24h_btc_normalized.toLocaleString() : \"Not Available\"}\r\n            </Typography>\r\n            </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"text-center\">\r\n                <a href={data.url} className=\"btn btn-success\">View Source</a>\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n           </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExchangeData\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport ExchangeData from './ExchangeData'\r\nimport {Grid} from '@material-ui/core'\r\n\r\nconst Exchange = () => {\r\n\r\n    const [list, setList] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const getData = async() => {\r\n        const url = \"https://api.coingecko.com/api/v3/exchanges?per_page=50&page=1\"\r\n        setLoading(true)\r\n        await axios.get(url)\r\n        .then((res) => {\r\n        console.log(res.data)\r\n        setList(res.data)\r\n        setLoading(false)\r\n        })\r\n        .catch((error) => {\r\n            alert(error, \"Not able to load data\")\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setInterval(getData(), 3000)\r\n    },[])\r\n\r\n    const isLoading = () => {\r\n        return (\r\n            <div class=\"spinner\">\r\n                <div class=\"d-flex justify-content-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                  </div>\r\n                </div> \r\n            </div>        \r\n        )\r\n     }\r\n\r\n    return (\r\n           <div className=\"container\">\r\n            <h1 className=\"mt-4 text-center\">Top 50 Exchanges</h1>\r\n            <hr/>\r\n            {loading ? isLoading() : \r\n              <Grid container spacing={2} style={{gap:'20px', justifyContent: 'center'}}>\r\n                {list.map((list, i) => {\r\n                    return <ExchangeData data={list} />\r\n                })} \r\n            </Grid>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Exchange;","import React, {useState} from 'react'\r\nimport convert from 'ether-converter'\r\nimport { data } from 'browserslist';\r\n\r\n\r\nconst Calculator = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        amount:\"\",\r\n        from:\"\",\r\n        loading: false,\r\n        results:\"\"\r\n    });\r\n    const {amount, from, results} = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n        console.log(values)\r\n    };\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({ ...values, loading: true });\r\n        const data = convert(amount, from)\r\n        setValues({ ...values, results:data, amount:\"\", from:\"\", loading: false});\r\n        console.log(results)\r\n    }\r\n\r\n    const result = () => {\r\n        return (\r\n            <>\r\n                <p>ether: {results.ether}</p>\r\n                <p>wei: {results.wei}</p>\r\n                <p>finney: {results.finney}</p>\r\n                <p>gether: {results.gether}</p>\r\n                <p>gwei: {results.gwei}</p>\r\n                <p>kether: {results.kether}</p>\r\n                <p>kwei: {results.kwei}</p> \r\n                <p>mether: {results.mether} </p>\r\n                <p>mwei: {results.mwei}</p>\r\n                <p>szabo: {results.szabo}</p>\r\n                <p>tether: {results.tether}</p>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const showForm = () => {\r\n      return <>\r\n    <form onSubmit={clickSubmit}>\r\n    <div className=\"form-group\">\r\n      <label>Enter Value:</label>\r\n      <input type=\"Number\" className=\"form-control\" placeholder=\"Enter Value you want to convert\" value={amount} onChange={handleChange('amount')}/>\r\n     </div>\r\n    <br/>\r\n    <div>\r\n        <label>Unit:</label>\r\n        <select value={from} onChange={handleChange('from')} className=\"form-control\">\r\n            <option>Select the unit eg. Wei, Ether, etc.</option>\r\n            <option>ether</option>\r\n            <option>wei</option>\r\n            <option>finney</option>\r\n            <option>gether</option>\r\n            <option>gwei</option>\r\n            <option>kether</option>\r\n            <option>kwei</option>\r\n            <option>mether</option>\r\n            <option>mwei</option>\r\n            <option>Szabo</option>\r\n            <option>tether</option>\r\n        </select>\r\n    </div>\r\n    <br/>\r\n    <div>\r\n        <button className=\"btn btn-success\">Convert</button>\r\n    </div>\r\n    </form>\r\n      </>\r\n    }\r\n\r\n    return (\r\n    <div class=\"container mt-4\">\r\n    <h1 className=\"text-center\">Ethereum unit converter</h1>\r\n     <hr/>\r\n     {showForm()}\r\n     <br/>\r\n     {result()}\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Calculator","import React from 'react'\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }));\r\n\r\nconst EventsData = ({ events,i }) => {\r\n    const date = moment().format('MMMM Do YYYY, h:mm:ss a');\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid>\r\n          <Card className={classes.root}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"\" className={classes.avatar}>\r\n                 {i}\r\n              </Avatar>\r\n            }\r\n            title={events.title}\r\n            subheader={date}\r\n          />\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={events.screenshot}\r\n          />\r\n          <CardContent>\r\n            <Typography className=\"black-5\" variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n             Description: {events.description ? events.description.substring(0,300) : \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"black-6\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Organiser: {events.organizer ? events.organizer : \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"black-7\"  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Start Date: {events.start_date ? events.start_date : \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"black-8\"  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              End Date: {events.end_date ? events.end_date : \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"black-9\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              City: {events.city ? events.city : \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"black-10\"  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Country: {events.country ? events.country : \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"black-10\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Venue: {events.venue ? events.venue : \"To Be Determined\"}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardContent>\r\n            <Typography className=\"text-center\">\r\n                <a href={events.website} className=\"btn btn-primary\">View Source</a>\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n        </Grid>\r\n      );\r\n}\r\n\r\nexport default EventsData\r\n","import React, { useEffect, useState } from 'react'\r\nimport EventsData from './EventsData';\r\nimport axios from 'axios'\r\nimport {Grid} from '@material-ui/core'\r\n\r\nconst Events = () => {\r\n\r\n    const [eventsData, setEventsData] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const getEvents = () => {\r\n        setLoading(true)\r\n        axios.get('https://api.coingecko.com/api/v3/events')\r\n        .then(eventList => {\r\n            console.log(eventList.data.data)\r\n            setEventsData(eventList.data.data)\r\n            setLoading(false)\r\n        })\r\n        .catch(console.error)\r\n    }\r\n\r\n    useEffect(() => {\r\n       setInterval(getEvents(),3000)\r\n    }, [])\r\n\r\n    const isLoading = () => {\r\n        return (\r\n            <div class=\"spinner\">\r\n                <div class=\"d-flex justify-content-center\">\r\n                  <div class=\"spinner-border\" role=\"status\">\r\n                  </div>\r\n                </div> \r\n            </div>        \r\n        )\r\n     }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"mt-4 text-center\">Top Upcoming Events</h1>\r\n            <hr/>\r\n            {loading ? isLoading() : \r\n              <Grid container spacing={2} style={{gap: '20px', justifyContent: 'center'}} >\r\n                {eventsData.map((event,i) => {\r\n                        return <EventsData events={event} i={i} />\r\n                })}\r\n                </Grid>\r\n            }\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default Events;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport News from './components/News'\r\nimport Home from './components/Home'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Navbar from \"./components/Navbar\";\r\nimport ShowCoin from \"./components/ShowCoin\";\r\nimport Exchange from \"./components/Exchange\";\r\nimport Calculator from \"./components/Calculator\";\r\nimport Events from \"./components/Events\";\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar/>\r\n      <br/>\r\n        <Switch>\r\n            <Route path='/' exact component={Home} />\r\n            <Route path='/news' exact component={News} />\r\n            <Route path='/coindata/:id' exact component={ShowCoin} />\r\n            <Route path='/exchanges' exact component={Exchange} />\r\n            <Route path='/calculator' exact component={Calculator} />\r\n            <Route path='/events' exact component={Events} />\r\n          </Switch>\r\n       </Router>\r\n    );\r\n  }\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport \"../node_modules/bootstrap/dist/js/bootstrap.min.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}